@model GetListResponse<Application.Features.OperationClaims.Queries.GetAllUsersRole.GetAllUsersRoleQueryResponse>
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    var response = Model.Items;
}

<div class="row">
    <table class="table table-striped">
        <thead>
            <tr style="text-align: center;">
                <th style=" background-color: blueviolet; color: white !important;">Ad Soyad</th>
                <th style=" background-color: blueviolet; color: white !important;">Şirket</th>
                <th style=" background-color: blueviolet; color: white !important;">Telefon</th>
                <th style=" background-color: blueviolet; color: white !important;">Email</th>
                <th style=" background-color: blueviolet; color: white !important;">Statu</th>
                <th style=" background-color: blueviolet; color: white !important;">Rol</th>
                <th style=" background-color: blueviolet; color: white !important;">İşlem</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var data in Model.Items)
            {
                <tr>
                    <td>@data.FirstName @data.LastName </td>
                    <td>@data.CompanyName </td>
                    <td>@data.Phone </td>
                    <td>@data.Email </td>
                    <td>@data.UserStatus </td>
                    <td>@data.RoleName </td>
                    <td>
                        <button class="btn btn-sm btn-primary"><i class="bi bi-file-earmark-plus"></i></button>
                        <button class="btn btn-sm btn-danger" onclick="openUpdateModal('@data.Id', '@data.RoleName')">
                            <i class="bi bi-pencil-square"></i>
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <!-- Pagination -->
    @await Component.InvokeAsync("Pagination", new { model = Model, actionName = "Index", controllerName = "OperationClaims" })
</div>

<!-- Modal işlemi -->
<div class="modal fade" id="updateRoleModal" tabindex="-1" aria-labelledby="updateRoleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="updateRoleModalLabel">ROL GÜNCELLEME!</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div>
                    <strong style="color:blueviolet">Mevcut Roller:</strong> <span id="currentRoles" style="color:red; text-decoration:double"></span>
                </div>
                <div class="mb-3">
                    <label for="rolesCheckboxList" class="form-label"></label>
                    <div id="rolesCheckboxList">
                        <!-- Rollerin checkbox olarak yükleneceği alan -->
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Kapat</button>
                <button type="button" class="btn btn-primary" id="saveChangesButton">Değişiklikleri Kaydet</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function openUpdateModal(userId, currentRoles) {

            var roleArray = currentRoles.split(',').map(role => role.trim().toLowerCase());
            document.getElementById("currentRoles").innerText = roleArray.join(', ').toUpperCase();

            $.ajax({
                url: '/OperationClaims/GetRoles',
                method: 'GET',
                success: function (roles) {
                    var checkboxList = $('#rolesCheckboxList');
                    checkboxList.empty();
                    roles.forEach(function (role) {
                        var isChecked = roleArray.includes(role.name.trim().toLowerCase()) ? 'checked' : '';

                        checkboxList.append(`
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" value="${role.id}" id="role_${role.id}" ${isChecked}>
                                <label class="form-check-label" for="role_${role.id}">
                                    ${role.name}
                                </label>
                            </div>
                        `);
                    });
                    $('#updateRoleModal').modal('show');
                },
                error: function () {
                    alert('Roller yüklenemedi.');
                }
            });
            
            $('#saveChangesButton').off('click').on('click', function () {
                var updates = [];                                
                $('#rolesCheckboxList input[type="checkbox"]').each(function () {
                    updates.push({
                        OperationClaimId: $(this).val(),
                        IsAssigned: $(this).is(':checked')
                    });
                });
               
                $.ajax({
                    url: '/User/UpdateUserRole',
                    type: 'POST',
                    contentType: 'application/json', 
                    data: JSON.stringify({
                        UserId: userId,
                        OperationClaimUpdates: updates
                    }),
                    success: function (response) {
                        $('#updateRoleModal').modal('hide');

                        // Modal kapandıktan sonra SweetAlert'i göster
                        $('#updateRoleModal').on('hidden.bs.modal', function () {
                            Swal.fire({
                                icon: 'success',
                                title: 'Başarılı!',
                                text: 'Rol başarıyla güncellendi.',
                                timer: 2000,
                                showConfirmButton: false,
                                position: 'top-end',
                                toast: true
                            }).then(() => {
                                location.reload(); // Sayfayı yenileyin
                            });
                        });
                    },
                    error: function () {
                        Swal.fire({
                            icon: 'error',
                            title: 'Hata!',
                            text: 'Bir hata oluştu!',
                        });
                    }
                });
            });
        }

    </script>
}
